z
# keskiarvo = 2500cm, keskihajonta 5cm
# laske todennäköisyys, että pituus poikkeaa yli 10cm odotusarvosta
# laske keskihajontojen määrä
z = 10 / 5
z
# pitää olla 2SD sisällä molemmin puolin
answer = pnorm(2) - pnorm(-2)
answer
# pitää olla 2SD sisällä molemmin puolin
allowed_area = pnorm(2) - pnorm(-2)
unallowed_area = 1 - allowed_area
unallowed_area
amount_of_sd = qnorm(0.9975)
amount_of_sd
0.2 / amount_of_sd
# hyväksyi vastaukseksi vain Z-taulukosta katsotun arvon, ei R:llä katsottua
# keskiarvo = 2500cm, keskihajonta 5cm
# laske todennäköisyys, että pituus poikkeaa yli 10cm odotusarvosta
# laske keskihajontojen määrä
z = 10 / 5
z
# pitää olla 2SD sisällä molemmin puolin
allowed_area = pnorm(2) - pnorm(-2)
unallowed_area = 1 - allowed_area
unallowed_area
choose(32,4)
function (a, b) {
return a + b
function (a, b) {
return (a + b)
}
testi1(3,7)
testi1 = function (a, b) {
return (a + b)
}
testi1(3,7)
testi2 = function (a, b) {
return (a - b)
}
qnorm(0.97)
pnorm(0.97)
pnorm(3.06)
round(pnorm(0.97), 4)
round(pnorm(3.06), 4)
1 - round(pnorm(0.97), 4)
1 - round(pnorm(3.06), 4)
1 - round(pnorm(2.58), 4)
1 - round(pnorm(8.16), 4)
0.6^10
0.6^60
((1.96 * 20) / 5)^2
qnorm(0.99)
((2.326 * 1.5) / 1)^2
qnorm(0.995)
Z = qnorm(0.995)
((Z * 1.5) / 1)^2
((Z * 1.5) / 0.5)^2
Z = qnorm(0.995)
Z
n = ((2.576 * 1.5) / 0.5)^2
n
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
mean(dataset1)
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta sekä 99% luottamusrajat
# anna vastaus kahden desimaalin tarkkuudella
mean(dataset1)
options(digits = 10)
round(mean(dataset1), 2)
round(sd(dataset1), 2)
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta sekä 99% luottamusrajat
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
sd1 = round(sd(dataset1), 2)
sample_size1 = length(dataset1)
sample_size1
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
keskivirhe = (1 - luottamusvali) / 2
return (5)
}
conf_inter(mean1, sd1, 99)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
keskivirhe = (1 - luottamusvali) / 2
return (keskivirhe)
}
conf_inter(mean1, sd1, 99)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
keskivirhe = (1 - luottamusvali/100) / 2
return (keskivirhe)
}
conf_inter(mean1, sd1, 99)
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
round(mean(dataset1), 2)
round(sd(dataset1), 2)
length(dataset1)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
keskivirhe = (1 - luottamusvali/100/2)
return (keskivirhe)
}
conf_inter(mean1, sd1, 99)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
keskivirhe = (1 - luottamusvali/100)
return (keskivirhe)
}
conf_inter(mean1, sd1, 99)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
keskivirhe = (1 - luottamusvali/100) / 2
return (keskivirhe)
}
conf_inter(mean1, sd1, 99)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
keskivirhe = 1 - (1 - luottamusvali/100) / 2
return (keskivirhe)
}
conf_inter(mean1, sd1, 99)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
return (Z)
}
conf_inter(mean1, sd1, 99)
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
sd1 = round(sd(dataset1), 2)
sample_size1 = length(dataset1)
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, käytetään normaalijakauman Z-taulukkoa (qnorm-komento)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
keskivirhe = keskihajonta /
return (Z)
}
conf_inter(mean1, sd1, 99, sample_size1)
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, käytetään normaalijakauman Z-taulukkoa (qnorm-komento)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
keskivirhe = keskihajonta / otoskoko
return (Z, keskivirhe)
}
conf_inter(mean1, sd1, 99, sample_size1)
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, käytetään normaalijakauman Z-taulukkoa (qnorm-komento)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
keskivirhe = keskihajonta / otoskoko
return (c(Z, keskivirhe)
}
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, käytetään normaalijakauman Z-taulukkoa (qnorm-komento)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
keskivirhe = keskihajonta / otoskoko
return (c(Z, keskivirhe))
}
conf_inter(mean1, sd1, 99, sample_size1)
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, käytetään normaalijakauman Z-taulukkoa (qnorm-komento)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
keskivirhe = keskihajonta / sqrt(otoskoko)
return (c(Z, keskivirhe))
}
conf_inter(mean1, sd1, 99, sample_size1)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
mean1
sd1 = round(sd(dataset1), 2)
sd1
sample_size1 = length(dataset1)
sample_size1
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
mean1
sd1 = round(sd(dataset1), 2)
sd1
sample_size1 = length(dataset1)
sample_size1
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, käytetään normaalijakauman Z-taulukkoa (qnorm-komento)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
# mene Z * keskihajonta vasemmalle ja oikealle keskiarvosta
pienin = keskiarvo - Z * keskihajonta
suurin = keskiarvo + Z * keskihajonta
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
mean1
sd1 = round(sd(dataset1), 2)
sd1
sample_size1 = length(dataset1)
sample_size1
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, käytetään normaalijakauman Z-taulukkoa (qnorm-komento)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
# mene Z * keskihajonta vasemmalle ja oikealle keskiarvosta
pienin = keskiarvo - Z * keskihajonta
suurin = keskiarvo + Z * keskihajonta
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
# mene Z * keskihajonta vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - Z * keskihajonta, 2)
suurin = round(keskiarvo + Z * keskihajonta, 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99)
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
mean1
sd1 = round(sd(dataset1), 2)
sd1
sample_size1 = length(dataset1)
sample_size1
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, käytetään normaalijakauman Z-taulukkoa (qnorm-komento)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali) {
Z =  qnorm(1 - (1 - luottamusvali/100) / 2)
# mene Z * keskihajonta vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - Z * keskihajonta, 2)
suurin = round(keskiarvo + Z * keskihajonta, 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99)
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
mean1
sd1 = round(sd(dataset1), 2)
sd1
sample_size1 = length(dataset1)
sample_size1
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, mutta populaation keskihajonta on tuntematon
# käytetään studentin t-jakaumaa
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
T =  qt(1 - (1 - luottamusvali/100) / 2, df = otoskoko - 1)
# mene T * keskihajonta vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - T * keskihajonta / sqrt(otoskoko), 2)
suurin = round(keskiarvo + T * keskihajonta / sqrt(otoskoko), 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
qt(0.025, df=20)
T =  qt(1 - (1 - luottamusvali/100) / 2, df = otoskoko - 1)
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
mean1
sd1 = round(sd(dataset1), 2)
sd1
sample_size1 = length(dataset1)
sample_size1
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, mutta populaation keskihajonta on tuntematon
# käytetään studentin t-jakaumaa
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
T =  qt(1 - (1 - luottamusvali/100) / 2, df = otoskoko - 1)
print(T)
# mene T * keskihajontaa vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - T * keskihajonta / sqrt(otoskoko), 2)
suurin = round(keskiarvo + T * keskihajonta / sqrt(otoskoko), 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
qt(0.975, df=20)
qt(0.9975, df=9)
qt(0.95, df=9)
qt(0.975, df=9)
qt(0.975, df=9)
qt(0.025, df=9)
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
mean1
sd1 = round(sd(dataset1), 2)
sd1
sample_size1 = length(dataset1)
sample_size1
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, mutta populaation keskihajonta on tuntematon
# käytetään studentin t-jakaumaa
# HUOM: R:ssä qt-funktio on oletusarvona 1-suuntainen
# eli jos kirjoittaa qt(0.975, df=9) tulee 2.26
# joka vastaa 0.025 yksisuuntaisessa taulukossa
# kun df=9 ja siten otoskoko = 9+1
# jos tehdään 2-suuntainen testi, pitäisi jakaa häntä 2:lla
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
percent = 1 - (1 - luottamusvali/100) / 2
print(percent)
T =  qt(percent, df = otoskoko - 1)
print(T)
# mene T * keskihajontaa vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - T * keskihajonta / sqrt(otoskoko), 2)
suurin = round(keskiarvo + T * keskihajonta / sqrt(otoskoko), 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
# estimations
# 13.2.2024
options(digits = 10)
getwd()
setwd("C:\\Users\\Parrot\\data-analyysi1\\visualisointi\\Rstudio-graphs\\")
getwd()
dataset1 = c(20.0, 18.6, 18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2,
19.4, 19.6, 20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7, 20.5, 18.6,
18.9, 19.3, 19.5, 19.2, 20.1, 20.2, 19.4, 18.8, 18.2, 19.4, 19.6,
20.1, 19.3, 18.7, 20.3, 19.5, 19.6, 19.7)
# laske keskiarvo, hajonta
# anna vastaus kahden desimaalin tarkkuudella
mean1 = round(mean(dataset1), 2)
mean1
sd1 = round(sd(dataset1), 2)
sd1
sample_size1 = length(dataset1)
sample_size1
# laske 99% luottamusrajat samalle datasetille
# koska otoskoko on yli 30, mutta populaation keskihajonta on tuntematon
# käytetään studentin t-jakaumaa
# HUOM: R:ssä qt-funktio on oletusarvona 1-suuntainen
# eli jos kirjoittaa qt(0.975, df=9) tulee 2.26
# joka vastaa 0.025 yksisuuntaisessa taulukossa
# kun df=9 ja siten otoskoko = 9+1
# jos tehdään 2-suuntainen testi, pitäisi jakaa häntä 2:lla
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
percent = 1 - (1 - luottamusvali/100) / 2
print("percent: " + percent)
T =  qt(percent, df = otoskoko - 1)
print(T)
# mene T * keskihajontaa vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - T * keskihajonta / sqrt(otoskoko), 2)
suurin = round(keskiarvo + T * keskihajonta / sqrt(otoskoko), 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
percent = 1 - (1 - luottamusvali/100) / 2
print(paste("percent: ", percent))
T =  qt(percent, df = otoskoko - 1)
print(T)
# mene T * keskihajontaa vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - T * keskihajonta / sqrt(otoskoko), 2)
suurin = round(keskiarvo + T * keskihajonta / sqrt(otoskoko), 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
percent = 1 - (1 - luottamusvali/100) / 2
print(paste("percent: ", percent))
T =  qt(percent, df = otoskoko - 1)
print(paste("T-value:", T))
# mene T * keskihajontaa vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - T * keskihajonta / sqrt(otoskoko), 2)
suurin = round(keskiarvo + T * keskihajonta / sqrt(otoskoko), 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
percent = 1 - (1 - luottamusvali/100) / 2
print(paste("percent: ", percent))
T =  qt(percent, df = otoskoko - 1)
print(paste("T-value:", T))
print(paste("SD:", keskihajonta))
# mene T * keskihajontaa vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - T * keskihajonta / sqrt(otoskoko), 2)
suurin = round(keskiarvo + T * keskihajonta / sqrt(otoskoko), 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
percent = 1 - (1 - luottamusvali/100) / 2
print(paste("percent: ", percent))
T =  qt(percent, df = otoskoko - 1)
print(paste("T-value:", T))
print(paste("population SD:", keskihajonta))
print(paste("sample SD:", keskihajonta / sqrt(otoskoko)))
# mene T * keskihajontaa vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - T * keskihajonta / sqrt(otoskoko), 2)
suurin = round(keskiarvo + T * keskihajonta / sqrt(otoskoko), 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
conf_inter = function (keskiarvo, keskihajonta, luottamusvali, otoskoko) {
percent = 1 - (1 - luottamusvali/100) / 2
print(paste("percent: ", percent))
T =  qt(percent, df = otoskoko - 1)
print(paste("T-value:", T))
print(paste("population SD:", keskihajonta))
print(paste("sample SD:", keskihajonta / sqrt(otoskoko)))
print(paste("standard error:", T * (keskihajonta / sqrt(otoskoko))))
# mene T * keskihajontaa vasemmalle ja oikealle keskiarvosta
pienin = round(keskiarvo - T * keskihajonta / sqrt(otoskoko), 2)
suurin = round(keskiarvo + T * keskihajonta / sqrt(otoskoko), 2)
return (c(pienin, suurin))
}
conf_inter(mean1, sd1, 99, sample_size1)
sample_size2 = 2300
mean2 = 628/2300
options(digits = 10)
sample_size2 = 2300
mean2 = 628/2300
options(digits = 10)
sample_size = 2300
mean = 628/2300
sample_size = 2300
support = 628/2300
qnorm(0.95)
qnorm(0.975)
